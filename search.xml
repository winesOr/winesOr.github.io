<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>生成ssh密匙</title>
    <url>/2020/12/07/%E7%94%9F%E6%88%90ssh%E5%AF%86%E5%8C%99/</url>
    <content><![CDATA[<div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><h1 id="hssh" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.6em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">生成ssh密匙</span></h1>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">git是分布式的代码管理工具，远程的代码管理是基于ssh的，所以要使用远程的git则需要ssh的配置。那么如何在苹果电脑上生成SSH密钥呢？</p>
<h3 id="h1ssh" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">1. 检测本地是否有ssh</span></h3>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">cd&nbsp;~/.ssh<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">进入当前用户下的<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">.ssh</code>目录，也可以用快捷键<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">command+shift+.</code>查看隐藏目录，如果有可以看到里面有两个</p>
<figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://wines-markdown.oss-cn-chengdu.aliyuncs.com/img/20201207152129.png" alt="" title="" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;"></figcaption></figure>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">文件，打开<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">.pub</code>目录，里面是我们的公钥，把里面的内容全部复制就可以了</p>
<h3 id="h2ssh" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">2. 生成ssh密匙</span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">如果本地没有密匙，可以打开终端用命令行生成密匙，然后按上面的步骤去查看即可</p>
<h4 id="h21" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">2.1 生成命令</span></h4>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">ssh-keygen&nbsp;-t&nbsp;rsa&nbsp;-C&nbsp;"email@xxx.com"<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">把上面的邮箱换成自己的邮箱就可以了</p>
<h4 id="h22" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">2.2 <strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">生成成功会提示以下代码</strong></span></h4>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Generating&nbsp;public/private&nbsp;rsa&nbsp;key&nbsp;pair.<br>Enter&nbsp;file&nbsp;in&nbsp;which&nbsp;to&nbsp;save&nbsp;the&nbsp;key&nbsp;(/Users/xxx/.ssh/id_rsa):<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">之后会提示你保存.ssh/id_rsa文件路径,直接enter即可</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Created&nbsp;directory&nbsp;‘/Users/xxx/.ssh’.<br>Enter&nbsp;passphrase&nbsp;(empty&nbsp;for&nbsp;no&nbsp;passphrase):<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">然后会提示你输入密码,两次.因为输入密码以后进行操作的时候都需要输入密码,所以最好不输入,直接enter，成功之后会显示</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Your&nbsp;identification&nbsp;has&nbsp;been&nbsp;saved&nbsp;in&nbsp;/Users/xxx/.ssh/id_rsa.<br><br>Your&nbsp;public&nbsp;key&nbsp;has&nbsp;been&nbsp;saved&nbsp;in&nbsp;/Users/xxx/.ssh/id_rsa.pub.<br><br>The&nbsp;key&nbsp;fingerprint&nbsp;is:<br><br>16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48&nbsp;email@xxx.com<br><br>The&nbsp;key’s&nbsp;randomart&nbsp;image&nbsp;is:（后面图形省略）<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">下一步是添加ssh,输入以下命令</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">ssh-add&nbsp;~/.ssh/id_rsa<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">此时会要求输入密码,之前输入了密码,此时就再次输入,没输入就enter</strong><br><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">成功之后终端会显示以下命令</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">Identity&nbsp;added:&nbsp;/Users/xxx/.ssh/id_rsa&nbsp;(/Users/xxx/.ssh/id_rsa)<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">最后会在.ssh文件夹下生成两个文件,一个是id_rsa,另一个是id_rsa.push到这一步,ssh已经生成成功，后续操作就需要找到对应的远程代码仓库网站,在setting页面找到ssh密钥选项，一般都会有new ssh密钥的操作，里面有两个选项</strong><br><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">1.title 这是区分多个ssh的标题,可以按照你喜欢的方式填写</strong><br><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">2.key</strong><br><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">key的查看方式如下</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">vim&nbsp;~/.ssh/id_rsa.pub<br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><strong style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; font-weight: bold;">复制显示的所有内容,贴到key里面,这样ssh key就添加到了对应网站里面检测可用性,以github为例,输入命令</strong></p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="shell language-shell hljs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(240, 240, 240); color: rgb(68, 68, 68); white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">ssh&nbsp;git@github.com<br></code></pre></div>


]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>列表</title>
    <url>/2020/10/15/%E5%88%97%E8%A1%A8/</url>
    <content><![CDATA[<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h3 id="1-列表的创建"><a href="#1-列表的创建" class="headerlink" title="1. 列表的创建"></a>1. 列表的创建</h3><ul>
<li><p>创建一个普通的列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">member = [<span class="string">'小甲鱼'</span>, <span class="string">'小布丁'</span>, <span class="string">'黑夜'</span>]</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个混合列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mix = [<span class="number">1</span>, <span class="string">'小甲鱼'</span>, <span class="number">3.14</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建一个空列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">empty = []</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="2-向列表添加元素"><a href="#2-向列表添加元素" class="headerlink" title="2. 向列表添加元素"></a>2. 向列表添加元素</h3><h4 id="1-append方法"><a href="#1-append方法" class="headerlink" title="1. append方法"></a>1. append方法</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">member.append(<span class="string">'葫芦娃娃'</span>)	<span class="comment"># 一次只能添加一个</span></span><br></pre></td></tr></table></figure>

<h4 id="2-extend方法"><a href="#2-extend方法" class="headerlink" title="2. extend方法"></a>2. extend方法</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">member.extend([<span class="string">'葫芦娃娃'</span>, <span class="string">'Crazy迷恋'</span>])	<span class="comment"># 可以添加多个，但是要用[]包裹</span></span><br></pre></td></tr></table></figure>

<h4 id="3-insert方法"><a href="#3-insert方法" class="headerlink" title="3. insert方法"></a>3. insert方法</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">member.insert(<span class="number">0</span>, <span class="string">'牡丹'</span>)	<span class="comment"># 插入元素，第一个是要插入的下标位置，第二个参数是要插入的元素</span></span><br></pre></td></tr></table></figure>



<h3 id="3-从列表中获取元素"><a href="#3-从列表中获取元素" class="headerlink" title="3. 从列表中获取元素"></a>3. 从列表中获取元素</h3><blockquote>
<p><strong>注意：</strong>和数组一样，我们可以通过元素的索引值(index)来获取列表中元素的值，注意，列表的值是从下标0开始。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">member[<span class="number">1</span>]</span><br></pre></td></tr></table></figure>



<h3 id="4-从列表删除元素"><a href="#4-从列表删除元素" class="headerlink" title="4. 从列表删除元素"></a>4. 从列表删除元素</h3><ul>
<li><p>remove</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">member.remove(<span class="string">'牡丹'</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>del</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">del</span> member[<span class="number">1</span>]	<span class="comment"># 删除该下标的元素</span></span><br><span class="line"><span class="keyword">del</span> member    <span class="comment"># 删除整个列表</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>pop</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">member.pop()	<span class="comment"># 删除列表最后一个元素</span></span><br><span class="line">member.pop(index)	<span class="comment"># 删除输入下表的元素</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="5-列表分片"><a href="#5-列表分片" class="headerlink" title="5. 列表分片"></a>5. 列表分片</h3><blockquote>
<p>利用索引值,每次我们可以从列表获取一个元素,但是我们总是贪心的,如果一次性需要获取多个元素,有没有办法实现呢?利用列表分片,我们可以简单的实现这个要求。</p>
</blockquote>
<ul>
<li><p>代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mun = member[<span class="number">1</span>:<span class="number">3</span>]		<span class="comment"># 注意，区间是左开右闭</span></span><br><span class="line">mun = member[:<span class="number">3</span>]		<span class="comment"># 从0开始，到3</span></span><br><span class="line">mun = member[<span class="number">1</span>:]		<span class="comment"># 从1开始，到结尾</span></span><br><span class="line">mun = member[:]			<span class="comment"># 列表的拷贝</span></span><br><span class="line"><span class="comment"># 使用这种方式拷贝的列表是值复制，会新建一个列表，然后把元素拷贝进去</span></span><br><span class="line"><span class="comment"># 在修改原列表时不会影响拷贝的列表</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="6-列表的逻辑运算符操作"><a href="#6-列表的逻辑运算符操作" class="headerlink" title="6. 列表的逻辑运算符操作"></a>6. 列表的逻辑运算符操作</h3><h4 id="1-比较运算符"><a href="#1-比较运算符" class="headerlink" title="1. 比较运算符"></a>1. 比较运算符</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list1 = [<span class="number">123</span>]</span><br><span class="line">list2 = [<span class="number">234</span>]</span><br><span class="line"></span><br><span class="line">print(list1 &gt; list2)	<span class="comment">#false</span></span><br><span class="line"></span><br><span class="line">list3 = [<span class="number">123</span>, <span class="number">234</span>]</span><br><span class="line">list4 = [<span class="number">234</span>, <span class="number">456</span>]</span><br><span class="line"></span><br><span class="line">print(list3 &gt; list4)	<span class="comment">#false</span></span><br></pre></td></tr></table></figure>

<h4 id="2-加法运算符"><a href="#2-加法运算符" class="headerlink" title="2. 加法运算符"></a>2. 加法运算符</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list3 = [<span class="number">123</span>, <span class="number">234</span>]</span><br><span class="line">list3 += [<span class="number">12</span>]</span><br><span class="line">print(list3)	<span class="comment">#[123, 234, 12]</span></span><br></pre></td></tr></table></figure>

<h4 id="3-重复操作符"><a href="#3-重复操作符" class="headerlink" title="3. 重复操作符"></a>3. 重复操作符</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list3 * <span class="number">3</span>	<span class="comment">#[123, 234, 12, 123, 234, 12, 123, 234, 12]</span></span><br><span class="line">list3 *= <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h4 id="4-其他"><a href="#4-其他" class="headerlink" title="4 . 其他"></a>4 . 其他</h4><ol>
<li><p>in/ not in</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">123</span> <span class="keyword">in</span> list3	<span class="comment">#true	，判断123这个元素是否存在list3</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Count,计算某个元素在列表中出现的次数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list.count(<span class="number">123</span>)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Index ,返回某个元素在列表中的第一个位置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list.index(<span class="number">123</span>)	<span class="comment">#返回出现的第一次出现的下标</span></span><br><span class="line">list.index(<span class="number">123</span>, <span class="number">3</span>, <span class="number">7</span>)	<span class="comment">#第一个参数是元素，第二和三是查找范围的开始下表</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>reverse，将列表逆置</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list.reverse()</span><br></pre></td></tr></table></figure>
</li>
<li><p>Sort,将列表排序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">list.sort(func, key, reverse = false/true)</span><br><span class="line"><span class="comment"># 前两项是排序使用的函数相关，默认是归并排序</span></span><br><span class="line"><span class="comment"># reverse是是否逆置，默认false：从小到大，true：从大到小</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>列表</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL数据库</title>
    <url>/2020/08/15/MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><ol>
<li>数据库的基本概念</li>
<li>MySQL数据库软件<ol>
<li>安装</li>
<li>卸载</li>
<li>配置</li>
</ol>
</li>
<li>SQL</li>
</ol>
<h2 id="数据库的基本概念"><a href="#数据库的基本概念" class="headerlink" title="数据库的基本概念"></a>数据库的基本概念</h2><ol>
<li>数据库的英文单词：DateBase 简称：DB</li>
<li>生么是数据库？<ul>
<li>用于<strong>存储</strong>和<strong>管理</strong>数据的仓库。</li>
</ul>
</li>
<li>数据库的特点：<ol>
<li>持久化存储数据的。其实数据库就是一个文件系统</li>
<li>方便存储和管理数据</li>
<li>使用了统一的方式操作数据库 — SQL</li>
</ol>
</li>
<li>常见的数据库软件<ul>
<li>参见《MySQL基础.PDF》</li>
</ul>
</li>
</ol>
<ul>
<li><p>MySQL 数据库软件</p>
<ol>
<li><p>安装 </p>
<ul>
<li>参见《MySQL基础.PDF》</li>
</ul>
</li>
<li><p>卸载</p>
<ol>
<li>去MySQL的安装目录找到my.ini文件<ul>
<li>复制 <code>on update/delete cascade=”C: /ProgramData/My SQL/ MySQL Server 5.5/Data/“</code></li>
</ul>
</li>
<li>卸载MySQL</li>
<li>删除<code>”C:/ProgramData“</code>下的MySQL文件夹</li>
</ol>
</li>
<li><p>配置</p>
<ul>
<li><p>MySQL服务启动</p>
<ol>
<li>手动</li>
<li>cmd窗口–&gt; <code>services.msc</code> 打开服务的窗口</li>
<li>使用管理员打开 cmd <ul>
<li><code>net start mysql</code> 启动MySQL服务</li>
<li><code>net stop mysql</code> 关闭MySQL服务</li>
</ul>
</li>
</ol>
<ul>
<li>MySQL登录<ol>
<li>mysql -uroot -proot<ul>
<li>注意：此处的root替换为你的账户和密码</li>
</ul>
</li>
<li>mysql -h + 输入ip地址 -root -p连接目标的密码</li>
<li>mysql –host=ip –root=root –password=连接目标的密码</li>
<li>Mac下把mysql替换为<code>/usr/local/MySQL/bin/mysql</code></li>
</ol>
</li>
</ul>
</li>
<li><p>MySQL退出</p>
<ol>
<li>exit</li>
<li>quit</li>
</ol>
</li>
<li><p>MySQL目录结构</p>
<ol start="3">
<li>MySQL安装目录<ul>
<li>配置文件 my.ini</li>
</ul>
</li>
<li>MySQL数据目录<ul>
<li>几个概念<ul>
<li>数据库：文件夹</li>
<li>表：文件</li>
<li>数据</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><h3 id="什么是SQL"><a href="#什么是SQL" class="headerlink" title="什么是SQL"></a>什么是SQL</h3><ul>
<li>Structured Query Language：结构化查询语言</li>
<li>其实就是定义了操作所有<strong>关系型数据库</strong>的规则。每一种数据库的操作方式存在不一样的地方，成为“方言”</li>
</ul>
<h3 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h3><ol>
<li>SQL语句可以单行或多行书写，以分号结尾</li>
<li>可使用空格和缩进来增强语句的可读性。</li>
<li>MySQL数据库的SQL语句不区分大小写,关键字建议使用大写。</li>
<li>三种注释<ul>
<li>单行注释: – 注释内容 或 # 注释内容(MySQL特有)</li>
<li>多行注释: /* 注释 */</li>
</ul>
</li>
</ol>
<h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><ol>
<li>DDL( Data Definition Language)数据定义语言<br> 用来定义数据库对象:数据库,表,列等。关键字: create,drop, alter等</li>
<li>DML( Data Manipulation Language)数据操作语言<br> 用来对数据库中表的数据进行增删改。关键字: insert, delete, update等</li>
<li>DQL( Data Query Language)数据噎询语言<br> 用来查询数据库中表的记录(数据)。关键字: select, where等</li>
<li>DCL( Data Control Language)数据控制语言(了解)<br> 用来定义数据库的访问权限和安全级别,及创建用户。关键字: GRANT,REVOKE等</li>
</ol>
<h2 id="DDL：操作数据库、表"><a href="#DDL：操作数据库、表" class="headerlink" title="DDL：操作数据库、表"></a>DDL：操作数据库、表</h2><h3 id="操作数据库：CRUD"><a href="#操作数据库：CRUD" class="headerlink" title="操作数据库：CRUD"></a>操作数据库：CRUD</h3><ol>
<li>C(Creat):创建<ul>
<li>创建数据库：<ul>
<li><code>create database 数据库名称</code></li>
</ul>
</li>
<li>创建数据库，判断不存在再创建<ul>
<li><code>create database if not exists 数据库名称</code></li>
</ul>
</li>
<li>创建数据库，并制定字符集<ul>
<li><code>create database 数据库名称 character set 字符集名</code></li>
</ul>
</li>
<li>练习：创建db4数据库，并判断是否存在，并制定字符集为gbk<ul>
<li><code>create database if not exists db4 character set gbk</code></li>
</ul>
</li>
</ul>
</li>
<li>R(Retrieve):查询<ul>
<li>查询所有数据库的名称：<ul>
<li><code>show database</code></li>
</ul>
</li>
<li>查看某个数据库的字符集：查询某个是数据库创建语句<ul>
<li><code>show create database 数据库名称</code></li>
</ul>
</li>
</ul>
</li>
<li>U(Update):修改<ul>
<li>修改数据库的字符集<ul>
<li><code>alter database 数据库名称 character set 字符集名称</code></li>
</ul>
</li>
</ul>
</li>
<li>D(Delete):删除<ul>
<li>删除数据库<ul>
<li><code>drop database 数据库名称</code></li>
</ul>
</li>
<li>判断数据库是否存在，然后删除<ul>
<li><code>drop database if exists 数据库名称</code></li>
</ul>
</li>
</ul>
</li>
<li>使用数据库<ul>
<li>查询当前正在使用的数据库名称<ul>
<li><code>select database()</code></li>
</ul>
</li>
<li>使用数据库<ul>
<li><code>use 数据库名称</code></li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="操作表"><a href="#操作表" class="headerlink" title="操作表"></a>操作表</h3><ol>
<li><p>C(Creat):创建</p>
<ol>
<li><p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">            列名1 数据类型1，</span><br><span class="line">            列名2 数据类型2,</span><br><span class="line">            ...</span><br><span class="line">            列名n 数据类型n</span><br><span class="line">         );</span><br></pre></td></tr></table></figure>
<ul>
<li>注意：最后一列不需要加“,”</li>
<li>数据库类型：</li>
</ul>
<ol>
<li>int 整数类型<ul>
<li>age int</li>
</ul>
</li>
<li>double：小数类型<ul>
<li>score double(5, 2)</li>
</ul>
</li>
<li>date:日期类型，只包含年月日，yyyy-MM–dd</li>
<li>datetime:日期，包含年月日时分秒 yyyy-MM–dd HH:mm:ss</li>
<li>timestamp:时间戳类型，包含年月日时分秒 yyyy-MM–dd HH:mm:ss<ul>
<li>如果将来不给这个字段赋值，或赋值为null，则默认使用当前的系统时间，来自动赋值</li>
</ul>
</li>
<li>varchar：字符串<ul>
<li>name varchar(20):姓名最大20个字符</li>
<li>张三 2个字符， zhangsan 8个字符</li>
</ul>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<ul>
<li><p>创建表</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table Student(</span><br><span class="line">    id int,</span><br><span class="line">    name varchar(32),</span><br><span class="line">    age int,</span><br><span class="line">    score double(4, 1),</span><br><span class="line">    birthday date,</span><br><span class="line">    insert_time timestamp</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li>
</ul>
<ol>
<li>R(Retrieve):查询<ul>
<li>查询某个数据库所有表的名称<ul>
<li><code>show tables</code><ul>
<li>查询表结构</li>
<li><code>desc 表名</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>U(Update):修改<ol>
<li>修改表名<br> <code>alter table 表名 rename to 新表名;</code></li>
<li>修改表的字符集<br> <code>alter table stu character set 字符集;</code></li>
<li>添加一列<br> <code>alter table 表名 add 列名 数据类型;</code></li>
<li>修改列名称 类型<br> <code>alter table 表名 change 列名 新列名 新数据类型;</code><br> <code>alter table 表名 modify 列名 新数据类型;</code></li>
<li>删除列<br> <code>alter table 表名 drop 列名;</code></li>
</ol>
</li>
<li>D(Delete):删除</li>
</ol>
<h2 id="DML：增删改表中数据"><a href="#DML：增删改表中数据" class="headerlink" title="DML：增删改表中数据"></a>DML：增删改表中数据</h2><ol>
<li>添加数据：<ul>
<li>语法：<br>   <code>insert into 表名(列名1,列名2,.....类名n) values(值1,值1....值n)</code></li>
<li>注意：<ol>
<li>列名和值要一一对应</li>
<li>如果表名后，不定义列名，则默认个列添加值<br><code>insert into 表名(类名1,列名2,....列名n) values(值1,值1....值n)</code></li>
<li>除了数字类型，其他类型要用引号（单双都可）引起来</li>
</ol>
</li>
</ul>
</li>
<li>删除数据<ul>
<li>语法：<ul>
<li><code>delete from 表名 [where 条件]</code></li>
</ul>
</li>
<li>注意：<ol>
<li>如果不加条件，则删除表中所有记录。</li>
<li>如果要删除所有记录<ol>
<li><code>delete from 表名;</code> – 不推荐使用，执行效率低下</li>
<li><code>TRUNCATE TABLE Student;</code> – 删除表，然后创建一个相同的空表，推荐使用</li>
</ol>
</li>
</ol>
</li>
</ul>
</li>
<li>修改数据 <ul>
<li>语法：<ul>
<li><code>update 表名 set 列1 = 值1, 列2 = 值2, ... where[条件];</code></li>
</ul>
</li>
<li>注意：<ol>
<li>如果不加任何条件，则会将表中所有记录全部修改</li>
</ol>
</li>
</ul>
</li>
</ol>
<h2 id="DQL-查询表中记录"><a href="#DQL-查询表中记录" class="headerlink" title="DQL:查询表中记录"></a>DQL:查询表中记录</h2><h3 id="DQL-1-查询语句"><a href="#DQL-1-查询语句" class="headerlink" title="DQL 1.查询语句"></a>DQL 1.查询语句</h3><p><code>select * from 表名;</code></p>
<ol>
<li><p>语法：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select </span><br><span class="line">    字段名称</span><br><span class="line">from</span><br><span class="line">    表名列表</span><br><span class="line">where</span><br><span class="line">    条件列表</span><br><span class="line">group by</span><br><span class="line">    排序</span><br><span class="line">limit</span><br><span class="line">    分页限定</span><br></pre></td></tr></table></figure>
</li>
<li><p>基础查询</p>
<ol>
<li>多个字段查询<br> <code>select 字段名1, 字段名2... from 表名;</code><ul>
<li>注意：如果查询所有字段，可以使用*替换字段列表</li>
</ul>
</li>
<li>去重复<ul>
<li>distinct</li>
</ul>
</li>
<li>计算列<ul>
<li>一般可以使用四则运算计算一些列的值。（一般只会进行数值型的计算）</li>
<li>ifnull(表达式1, 表达式2)，null参与的运算，计算结果都为null<ul>
<li>表达式1：那个字段需要判断是否为null</li>
<li>表达式2：如果表达式1为null，替换为表达式二</li>
</ul>
</li>
</ul>
</li>
<li>起别名<ul>
<li>as：as也可以省略</li>
</ul>
</li>
</ol>
</li>
<li><p>条件查询</p>
<ol>
<li>where句子后接条件</li>
<li>运算符<ul>
<li>&lt;, &gt;, &lt;=, &gt;=, =, &lt;&gt;</li>
<li>between … and</li>
<li>in(集合)</li>
<li>like：模糊查询<ul>
<li>占位符：<ul>
<li>_:单个任意字符</li>
<li>%:多个任意字符</li>
</ul>
</li>
</ul>
</li>
<li>is null</li>
<li>and 或 &amp;&amp;</li>
<li>or 或 ||</li>
<li>not 或 ！</li>
</ul>
</li>
</ol>
</li>
<li><p>排序查询</p>
<ul>
<li>语法：<code>order by 句子</code><ul>
<li><code>order by 排序字段1 排序方式1, 排序字段2 排序方式2...</code><ul>
<li>排序方式：</li>
<li>ASC：升序，默认的。</li>
<li>DESC：降序。</li>
<li>注意：</li>
<li>如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>聚合函数：将一列数据作为一个整体，进行纵向的计算<br> <code>SELECT COUNT(字段名) FROM 表名;</code></p>
<ol>
<li>count：计算个数<ol>
<li>一般选择非空的列：主键</li>
<li>count(*)</li>
</ol>
</li>
<li>max：计算最大值</li>
<li>min:计算最小值</li>
<li>sum：计算和</li>
<li>avg：计算平均值</li>
</ol>
</li>
</ol>
<ul>
<li>注意：聚合函数的计算会排除NULL值。<ul>
<li>解决方案：<ol>
<li>选择不包含NULL的列计算</li>
<li>IFNULL 函数</li>
</ol>
</li>
</ul>
</li>
</ul>
<ol>
<li><p>分组查询</p>
<ol>
<li>语法：group by 分组字段;</li>
<li>注意：<ol>
<li>分组之后，查询的字段：分组字段、聚合函数</li>
<li>where 和 having的区别？<ol>
<li>where在分组之前进行限定，如果不满足条件，则不参与分组。</li>
<li>having在分组之后进行限定，如果不满足条件，就不会被查询出来。</li>
<li>where后不可以跟聚合函数，having可以进行聚合函数的判断。</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li><p>分页查询</p>
<ol>
<li><p>语法：limit 开始的索引,每页查询的条数</p>
</li>
<li><p>公式：开始的索引 = (当前页码 - 1) * 每页显示的条数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">--每页显示三条</span><br><span class="line">    SELECT * FORM Student LIMIT 0, 3; ---第一页</span><br><span class="line">    </span><br><span class="line">    SELECT * FORM Student LIMIT 3, 3; ---第二页</span><br><span class="line">    </span><br><span class="line">    SELECT * FORM Student LIMIT 6, 3; ---第三页</span><br></pre></td></tr></table></figure>
</li>
<li><p>分页操作(limit)是一个MySQL“方言”</p>
</li>
</ol>
</li>
</ol>
<h3 id="2-约束"><a href="#2-约束" class="headerlink" title="2.约束"></a>2.约束</h3><ul>
<li>概念：对表中的数据进行限定，保证数据的正确性、有效性和完整性。</li>
<li>分类：<ol>
<li>主键约束：primary key</li>
<li>非空约束：not null</li>
<li>唯一约束：unique</li>
<li>外键约束：foreign key</li>
</ol>
</li>
</ul>
<h4 id="1-非空约束：not-null，值不能为null"><a href="#1-非空约束：not-null，值不能为null" class="headerlink" title="1.非空约束：not null，值不能为null"></a>1.非空约束：not null，值不能为null</h4><ol>
<li><p>创建表时添加约束</p>
<ol>
<li><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table stu(</span><br><span class="line">    id int,</span><br><span class="line">    name varchar(20) not null;      --name非空</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建完表后，添加非空约束</p>
<ol>
<li><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table stu modify name varchar(20) not null;</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>删除非空约束</p>
<ol>
<li><code>alter table stu modify name varchar(20);</code></li>
</ol>
</li>
</ol>
</li>
</ol>
<h4 id="2-唯一约束：unique，值不能重复"><a href="#2-唯一约束：unique，值不能重复" class="headerlink" title="2.唯一约束：unique，值不能重复"></a>2.唯一约束：unique，值不能重复</h4><ol>
<li>创建表时添加约束  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table stu(</span><br><span class="line">    id int,</span><br><span class="line">    name varchar(20) unique;      --name唯一</span><br><span class="line">);</span><br></pre></td></tr></table></figure>


</li>
</ol>
<pre><code>* 注意：mysql中，唯一约束限定的列的值可以有多个null


1. 创建完表后，添加非空约束
    1. 
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alter table stu modify name varchar(20) unique;</span><br></pre></td></tr></table></figure>

1. 删除非空约束
    1. `alter table stu drop index name;`</code></pre><h4 id="主键约束：primary-key"><a href="#主键约束：primary-key" class="headerlink" title="主键约束：primary key"></a>主键约束：primary key</h4><ol>
<li><p>注意：</p>
<ol>
<li>含义：非空且唯一</li>
<li>一张表只能有一个字段为主键</li>
<li>主键就是表中记录的唯一标识</li>
</ol>
</li>
<li><p>创建表时，添加主键约束</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table stu(</span><br><span class="line">    id int primary key, --添加主键约束</span><br><span class="line">    name varchar(20);     </span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除主键<br> <code>alter table stu drop primary key;</code></p>
</li>
<li><p>创建表后，添加主键<br> <code>alter table stu modify id int primary key;</code></p>
</li>
<li><p>自动增长：</p>
<ul>
<li><p>概念：如果某一列是数值类型的，使用auto_increment 可以来完成值自动增长</p>
</li>
<li><p>创建表时，添加主键约束，并完成主键自增长</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> create table stu(</span><br><span class="line">    id int primary key auto_increment, --添加主键约束，并完成主键自增长</span><br><span class="line">    name varchar(20);     </span><br><span class="line">);</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除自增长<br>  <code>alter table stu modify id int</code></p>
</li>
<li><p>添加自增长<br>  <code>alter table stu modify id int auto_increment</code></p>
</li>
</ul>
</li>
</ol>
<h4 id="外键约束-foreign-key"><a href="#外键约束-foreign-key" class="headerlink" title="外键约束:foreign key"></a>外键约束:foreign key</h4><blockquote>
<p>让表与表之间产生关系，从而保证数据的正确性</p>
</blockquote>
<ol>
<li><p>在创建表时，可以添加外键</p>
<ul>
<li><p>语法：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">    ...</span><br><span class="line">    外键列</span><br><span class="line">    constraint 外键名称 foreign key (外键列名称) reference 主表名称(主表列名称));</span><br></pre></td></tr></table></figure>

</li>
</ul>
<ol>
<li>删除外键<br><code>alter table 表名 drop foreign key 外键名称</code></li>
<li>创建表之后添加外键<br><code>alter table 表名 add constraint 外键名称 foreign key (外键字段名称) reference 主表名称</code></li>
<li>级联操作<ol>
<li>添加级联操作<ul>
<li>语法：<code>alter table 表名 add constraint 外键名称 foreign key (外键字段名称) reference 主表名称 on update/delete cascade;</code></li>
</ul>
</li>
<li>分类<ol>
<li>级联更新：on update cascade</li>
<li>级联删除：on delete cascade</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3 id="3-多表之间的关系"><a href="#3-多表之间的关系" class="headerlink" title="3.多表之间的关系"></a>3.多表之间的关系</h3><h5 id="数据库的设计"><a href="#数据库的设计" class="headerlink" title="数据库的设计"></a>数据库的设计</h5><ol>
<li><p>多表之间的关系</p>
<ol>
<li>一对一：<ul>
<li>如：人和身份证</li>
</ul>
</li>
<li>一对多（多对一）：<ul>
<li>如：部门和员工</li>
<li>分析：一个部门有多个员工，一个员工只属于一个部门</li>
</ul>
</li>
<li>多对多：<ul>
<li>如：学生和课程</li>
<li>分析：一个学生可以选择多门课程，一门课可以被多名学生选择</li>
</ul>
</li>
</ol>
</li>
<li><p>实现关系：</p>
<ol>
<li><p>一对多（多对一）：</p>
<ul>
<li>如：部门和员工</li>
<li>实现方式：在多的一方建立外键，指向另一方的主键<br><img src="https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159644207556342.jpg?image/auto-orient,1/quality,q_90" alt="一对多"></li>
</ul>
</li>
<li><p>多对多：</p>
<ul>
<li>如：学生和课程</li>
<li>分析：一个学生可以选择多门课程，一门课可以被多名学生选择<br><img src="https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159644286970881.jpg?image/auto-orient,1/quality,q_90" alt="多对多"></li>
</ul>
</li>
</ol>
</li>
</ol>
<pre><code>1. 一对一：
    * 如：人和身份证
     ![一对一](https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159644302834351.jpg?image/auto-orient,1/quality,q_90)</code></pre><ol>
<li>案例<br> <img src="https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159670279374891.jpg?image/auto-orient,1/quality,q_90" alt="数据表关系图"></li>
</ol>
<h3 id="4-范式"><a href="#4-范式" class="headerlink" title="4.范式"></a>4.范式</h3><blockquote>
<p>概念：设计数据库时，要遵循的一些规范。<br>设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不同的规范要求    被称为不同的范式，各种范式呈<strong>递次规范</strong>，越高的范式数据库冗余越小</p>
</blockquote>
<ul>
<li>分类：<ol>
<li>第一范式（1NF）：数据库表的每一列都是不可分割的原子数据项，而不能是集合，数组，记录等非原子数据项<br><img src="https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159670429346791.jpg?image/auto-orient,1/quality,q_90" alt="第一范式"></li>
</ol>
</li>
</ul>
<pre><code>1. 第二范式（2NF）：在1NF的基础上，非码属性必须完全依赖于候选码在1NF基础上消除非主属性对主码的部分函数依赖）
    * 几个概念：
        1. 函数依赖：A--&gt;B，如果通过A属性的值，能够唯一确定B属性。则称B依赖于A。例如：学号--&gt;姓名。（学号，课程名称）--&gt;分数
        2. 完全函数依赖：A--&gt;B, 如果A是一个属性组，则B属性值的的确定需要依赖于A属性组里的所有属性值。
        3. 部分函数依赖：A--&gt;B, 如果A是一个属性组，则B属性值的的确定只需要依赖于A属性组里的某些属性值。
            例如：（学号，课程名称）--&gt; 姓名
        4. 传递函数依赖：A--&gt;B，B--&gt;C,如果通过A属性（属性组）的值，可以确定唯一B属性的值，再通过B属性（属性组）的值可以唯一确定C属性的值，则称C传递函数依赖于A。
            例如：学号--&gt;系名， 系名--&gt;系主任
        5. 码：如果在一张表中，一个属性或属性组，被其他所有属性所完全依赖，则称这个属性（属性组）为该属性的码。
            例如：在上表中码为（学号，课程名称）
            * 主属性：码属性组中的所偶遇属性
            * 非主属性：除码属性组的属性
        ![第二范式](https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159676887601581.jpg?image/auto-orient,1/quality,q_90)


1. 第三范式（3NF）：在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）</code></pre><p><img src="https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159676905347141.jpg?image/auto-orient,1/quality,q_90" alt="第三范式"></p>
<h3 id="5-数据库的备份和还原"><a href="#5-数据库的备份和还原" class="headerlink" title="5.数据库的备份和还原"></a>5.数据库的备份和还原</h3><ol>
<li>命令行：<ul>
<li>语法：</li>
<li>备份：mysqldump -用户名 -p密码 &gt; 保存的路径</li>
<li>还原：<ol>
<li>登录数据库</li>
<li>创建数据库</li>
<li>使用数据库</li>
<li>执行文件。source 文件路径</li>
</ol>
</li>
</ul>
</li>
<li>图形化工具</li>
</ol>
<h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><ul>
<li><p>查询语法：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select</span><br><span class="line">    列名列表</span><br><span class="line">from</span><br><span class="line">    表名列表</span><br><span class="line">where</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></li>
<li><p>准备sql</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">      # 创建部门表</span><br><span class="line">CREATE TABLE dept(</span><br><span class="line">	id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">	NAME VARCHAR(20)</span><br><span class="line">);</span><br><span class="line">INSERT INTO dept (NAME) VALUES (&#39;开发部&#39;),(&#39;市场部&#39;),(&#39;财务部&#39;);</span><br><span class="line"># 创建员工表</span><br><span class="line">CREATE TABLE emp (</span><br><span class="line">	id INT PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">	NAME VARCHAR(10),</span><br><span class="line">	gender CHAR(1), -- 性别</span><br><span class="line">	salary DOUBLE, -- 工资</span><br><span class="line">	join_date DATE, -- 入职日期</span><br><span class="line">	dept_id INT,</span><br><span class="line">	FOREIGN KEY (dept_id) REFERENCES dept(id) -- 外键，关联部门表(部门表的主键)</span><br><span class="line">);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;孙悟空&#39;,&#39;男&#39;,7200,&#39;2013-02-24&#39;,1);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;猪八戒&#39;,&#39;男&#39;,3600,&#39;2010-12-02&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;唐僧&#39;,&#39;男&#39;,9000,&#39;2008-08-08&#39;,2);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;白骨精&#39;,&#39;女&#39;,5000,&#39;2015-10-07&#39;,3);</span><br><span class="line">INSERT INTO emp(NAME,gender,salary,join_date,dept_id) VALUES(&#39;蜘蛛精&#39;,&#39;女&#39;,4500,&#39;2011-03-14&#39;,1);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<ul>
<li><p>笛卡尔积：</p>
<ul>
<li>有两个集合，取这两个所有集合的所有组成情况。</li>
<li>要完成多表查询，需要消除无用数据</li>
</ul>
</li>
<li><p>多表查询分类：</p>
<ol>
<li><p>内连接查询：</p>
<ol>
<li><p>隐式连接：使用where条件消除无用数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    -- 查询所有员工信息和对应的部门信息</span><br><span class="line">      SELECT * FROM emp, dept where emp.dept_id &#x3D; dept.id</span><br><span class="line">        </span><br><span class="line">      SELECT </span><br><span class="line">	t1.name, -- 员工表的姓名</span><br><span class="line">	t1.gender,-- 员工表的性别</span><br><span class="line">	t2.name -- 部门表的名称</span><br><span class="line">FROM</span><br><span class="line">	emp t1,</span><br><span class="line">	dept t2</span><br><span class="line">WHERE </span><br><span class="line">	t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>显式内连接</p>
<ul>
<li>语法：select 字段列表 from 表名1 (inner) join 表名2 on 条件</li>
<li>例如：<ul>
<li><code>select *from emp INNER JOIN dept ON emp.dept_id = dept.id;</code>  </li>
</ul>
</li>
<li>内连接查询注意：<ol>
<li>从哪些表中查询</li>
<li>条件是什么</li>
<li>查询哪些字段</li>
</ol>
</li>
</ul>
</li>
</ol>
</li>
<li><p>外连接查询：</p>
<ol>
<li>左外连接：<ul>
<li>语法：<code>select 字段列表 from 表名1 left [outer] join 表2 on 条件</code></li>
<li>查询的是左表所有数据以及其交集的部分。</li>
</ul>
</li>
<li>右外连接：<ul>
<li>语法：<code>select 字段列表 from 表名1 right [outer] join 表2 on 条件</code></li>
<li>查询的是右表所有数据以及其交集的部分。</li>
</ul>
</li>
</ol>
</li>
<li><p>字查询：</p>
<ul>
<li><p>概念：查询中嵌套查询，称嵌套查询为子查询</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> -- 查询工资最高的员工信息</span><br><span class="line">-- 1 查询最高的工资是多少 9000</span><br><span class="line">SELECT MAX(salary) 工资 FROM emp;</span><br><span class="line">-- 2 查询员工信息，并且工资等于 9000的 </span><br><span class="line">select * FROM emp where emp.salary &#x3D; 9000</span><br><span class="line"></span><br><span class="line">-- 一条SQL语句就完成, 子查询</span><br><span class="line">select * FROM emp where emp.salary &#x3D; (SELECT MAX(salary) FROM emp);</span><br></pre></td></tr></table></figure>
</li>
<li><p>子查询的不同结果</p>
<ol>
<li><p>子查询的结果是单行单列的：</p>
<ul>
<li><p>子查询可以作为条件，使用运算符去判断</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    	-- 查询员工工资小于小于平均工资的人</span><br><span class="line">select * FROM emp where emp.salary &lt; (SELECT avg(salary) FROM emp);</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>子查询的结果是多行单列的：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">         -- 查询&#39;财务部&#39;和&#39;市场部&#39;所有的员工信息</span><br><span class="line"> SELECT id FROM dept WHERE NAME &#x3D; &#39;财务部&#39; OR NAME &#x3D; &#39;市场部&#39;;</span><br><span class="line"> SELECT * FROM emp WHERE dept_id &#x3D; 3 OR dept_id &#x3D; 2;</span><br><span class="line">-- 子查询</span><br><span class="line"> SELECT * FROM emp WHERE dept_id IN (SELECT id FROM dept WHERE NAME &#x3D; &#39;财务部&#39; OR NAME &#x3D; &#39;市场部&#39;);</span><br></pre></td></tr></table></figure></li>
<li><p>子查询的结果是多行多列的：</p>
<ul>
<li><p>子查询可以作为一张虚拟表参与查询</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 查询员工入职日期是2011-11-11日之后的员工信息和部门信息</span><br><span class="line">-- 子查询</span><br><span class="line">  SELECT * FROM dept t1 ,(SELECT * FROM emp WHERE emp.&#96;join_date&#96; &gt; &#39;2011-11-11&#39;) t2</span><br><span class="line">	WHERE t1.id &#x3D; t2.dept_id;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        -- 普通内连接</span><br><span class="line">SELECT * FROM emp t1,dept t2 WHERE t1.&#96;dept_id&#96; &#x3D; t2.&#96;id&#96; AND t1.&#96;join_date&#96; &gt;  &#39;2011-11-11&#39;</span><br></pre></td></tr></table></figure>

<p><a href="https://www.bilibili.com/video/BV1RT4y1j7Xy/?spm_id_from=333.788.videocard.0" target="_blank" rel="noopener">练习视频</a></p>
</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
</ol>
</li>
</ul>
<h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="事务的基本介绍"><a href="#事务的基本介绍" class="headerlink" title="事务的基本介绍"></a>事务的基本介绍</h3><ol>
<li><p>概念：</p>
<ul>
<li>如果一个包含多个步骤的操作业务，被事务管理，那么这些事务要么同时成功，要么同时失败。</li>
</ul>
</li>
<li><p>操作：</p>
<ol>
<li>开启事务：start transaction；</li>
<li>回滚：rollback；</li>
<li>提交：commit；</li>
<li>MySQL数据库中事务默认自动提交<ul>
<li>事务提交的两种方式<ul>
<li>自动提交：<ul>
<li>MySQL就是自动提交</li>
<li>一条DML（增删改）语句会自动提交一次事务。</li>
</ul>
</li>
<li>手动提交：<ul>
<li><strong>Oracle</strong>数据库默认是手动提交事务的</li>
<li>需要先开启事务，再提交<ul>
<li>修改事务的默认提交方式：</li>
<li>查看事务的默认提交方式<code>select @@autocommit;</code></li>
<li>1 代表自动提交</li>
<li>0 代表手动提交</li>
</ul>
</li>
</ul>
</li>
<li>修改<br>  <code>set  @@autocommit = 0</code></li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
</ol>
<p><img src="https://wines-markdown.oss-cn-chengdu.aliyuncs.com/2020/08/14/159730946389562.jpg?image/auto-orient,1/quality,q_90" alt="事务操作"></p>
<h3 id="事务的四大特征"><a href="#事务的四大特征" class="headerlink" title="事务的四大特征"></a>事务的四大特征</h3><ol>
<li>原子性：是不可分割的最小操作单位，要么同时成功，要么同时失败</li>
<li>持久性：如果事务提交或者回滚后，将会持久的更新数据表</li>
<li>隔离性：多个事务之间。相互独立。</li>
<li>一致性：事务操作前后，数据总量不变</li>
</ol>
<h3 id="事务的隔离级别（了解）"><a href="#事务的隔离级别（了解）" class="headerlink" title="事务的隔离级别（了解）"></a>事务的隔离级别（了解）</h3><ul>
<li><p>概念：多个事务之间是隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。</p>
</li>
<li><p>存在的问题：</p>
<ol>
<li>脏读：一个事务读取到另一个事务没有提交的数据</li>
<li>不可重复读（虚读）：在同一个事务中，两次读取到的数据不一样</li>
<li>幻读：一个事务操作（DML）数据表中所有的记录，另一个事务添加了一条数据，则第一个事务查不到自己的修改</li>
</ol>
</li>
<li><p>隔离级别：</p>
<ol>
<li><p>read uncommitted：读为提交</p>
<ul>
<li>产生的问题：脏读，不可重读读，幻读</li>
</ul>
</li>
<li><p>read committed：读已提交（Oracle默认）</p>
<ul>
<li>产生的问题：不可重复度，幻读</li>
</ul>
</li>
<li><p>repeatable read：可重复读（MySQL默认）</p>
<ul>
<li>产生的问题：幻读</li>
</ul>
</li>
<li><p>serializable：串行化</p>
<ul>
<li>可以解决所有的问题</li>
</ul>
<blockquote>
<p><strong>注意：</strong>   隔离级别别从小到大安全性越来越高，但是效率越来越低 </p>
</blockquote>
</li>
</ol>
<ul>
<li>数据库<strong>设置</strong>隔离级别<br>  <code>set global transaction isolation level 级别字符串</code></li>
<li>数据库<strong>查询</strong>隔离级别<br>  <code>select @@tx_isolation;</code></li>
</ul>
</li>
</ul>
<h2 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h2><h3 id="SQL分类："><a href="#SQL分类：" class="headerlink" title="SQL分类："></a>SQL分类：</h3><ol>
<li>DDL：操作数据库和表</li>
<li>DML：增删改表中数据</li>
<li>DQL：查询表中数据</li>
<li>DCL：管理用户，授权</li>
</ol>
<blockquote>
<p>DBA：数据库管理员</p>
</blockquote>
<h4 id="DCL-管理用户、授权"><a href="#DCL-管理用户、授权" class="headerlink" title="DCL:管理用户、授权"></a>DCL:管理用户、授权</h4><ol>
<li><p>管理用户</p>
<pre><code>1. 添加用户：
    * 语法：`CREATE USER &apos;用户名&apos;@&apos;主机名&apos; IDENTIFIED BY &apos;密码&apos;;`
    * 例子：`CREATE USER &apos;zhangsan&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;123&apos;;`
    * 通配符： % 表示可以在任意主机使用用户登录数据库
2. 删除用户：
    * 语法：`DROP USER &apos;用户名&apos;@&apos;主机名&apos;;`
3. 修改用户密码：

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPDATE USER SET PASSWORD &#x3D; PASSWORD(&#39;新密码&#39;) WHERE USER &#x3D; &#39;用户名&#39;;</span><br><span class="line">UPDATE USER SET PASSWORD &#x3D; PASSWORD(&#39;abc&#39;) WHERE USER &#x3D; &#39;lisi&#39;;</span><br><span class="line">				</span><br><span class="line">SET PASSWORD FOR &#39;用户名&#39;@&#39;主机名&#39; &#x3D; PASSWORD(&#39;新密码&#39;);</span><br><span class="line">SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; &#x3D; PASSWORD(&#39;123&#39;);</span><br></pre></td></tr></table></figure></code></pre></li>
</ol>
<pre><code>* mysql中忘记了root用户的密码？
    1. `cmd -- &gt; net stop mysql` 停止mysql服务
     &gt; 需要管理员身份运行

    1. 使用无验证方式启动mysql服务： `mysqld --skip-grant-tables`
    2. 打开新的cmd窗口,直接输入mysql命令，敲回车。就可以登录成功
    3. use mysql;
    4. `update user set password = password(&apos;你的新密码&apos;) where user = &apos;root&apos;;`
    5. 关闭两个窗口
    6. 打开任务管理器，手动结束mysqld.exe 的进程
    7. 启动mysql服务
    8. 使用新密码登录。


 4. 查询用户：

  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-- 1. 切换到mysql数据库</span><br><span class="line">	&#96;USE myql;&#96;</span><br><span class="line">-- 2. 查询user表</span><br><span class="line">	&#96;SELECT * FROM USER;&#96;</span><br></pre></td></tr></table></figure>

  #### 权限管理

    1. 查询权限
        * 
      <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        -- 查询权限</span><br><span class="line">SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">SHOW GRANTS FOR &#39;lisi&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure>
    2. 授予权限
        * 
      <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        -- 授予权限</span><br><span class="line">grant 权限列表 on 数据库名.表名 to &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">-- 给张三用户授予所有权限，在任意数据库任意表上</span><br><span class="line">GRANT ALL ON *.* TO &#39;zhangsan&#39;@&#39;localhost&#39;;</span><br></pre></td></tr></table></figure>
    3. 撤销权限
        * 
      <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        -- 撤销权限：</span><br><span class="line">revoke 权限列表 on 数据库名.表名 from &#39;用户名&#39;@&#39;主机名&#39;;</span><br><span class="line">REVOKE UPDATE ON db3.&#96;account&#96; FROM &#39;lisi&#39;@&#39;%&#39;;</span><br></pre></td></tr></table></figure></code></pre>]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础知识提高</title>
    <url>/2020/07/04/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%8F%90%E9%AB%98/</url>
    <content><![CDATA[<h1 id="今日内容"><a href="#今日内容" class="headerlink" title="今日内容"></a>今日内容</h1><ol>
<li>junit单元测试</li>
<li>反射</li>
<li>注解</li>
</ol>
<h2 id="Junit单元测试"><a href="#Junit单元测试" class="headerlink" title="Junit单元测试"></a>Junit单元测试</h2><ul>
<li><p>测试分类：</p>
<ol>
<li>黑盒测试：不需要写代码，给输入值，看程序是否能够输出期望值</li>
<li>白盒测试 ：需要写代码。关注具体的实现流程</li>
</ol>
</li>
<li><p>Junit使用</p>
<ul>
<li>步骤<ol>
<li>定义一个测试类（测试用例）  <ul>
<li>类名<ul>
<li>测试类名：被测试类名 + Test</li>
<li>包名：XXX.XXX.xX.test</li>
</ul>
</li>
</ul>
</li>
<li>定义测试方法：可以独立运行<ul>
<li>方法名<ul>
<li>方法名：Test测试的方法名</li>
<li>返回值：void</li>
<li>参数列表：空参</li>
</ul>
</li>
</ul>
</li>
<li>给方法加@Test</li>
<li>导入Junit依赖环境</li>
</ol>
</li>
</ul>
</li>
<li><p>判定结果</p>
<ul>
<li>红色代表失败</li>
<li>绿色代表成功</li>
<li>一般会使用断言操作来处理结果<ul>
<li>Assert.assertEquals(期望的结果, 实际结果)</li>
</ul>
</li>
</ul>
</li>
<li><p>补充</p>
<ul>
<li>@Before：<ul>
<li>修饰的方法会在测试方法之前执行</li>
</ul>
</li>
<li>@After：<ul>
<li>修饰的方法会在测试方法执行之后自动被执行</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="反射：框架设计的灵魂"><a href="#反射：框架设计的灵魂" class="headerlink" title="反射：框架设计的灵魂"></a>反射：框架设计的灵魂</h2><ul>
<li>框架：半成品软件。在框架的基础上进行软阿金开发，简化代码</li>
<li>反射：将类的各个组成部分封装为其他对象，这就是反射机制<ul>
<li>好处：<ol>
<li>可以在程序运行的过程，操作这些对象</li>
<li>可以解耦，提高程序的可扩展性</li>
</ol>
</li>
</ul>
</li>
</ul>
<hr>
<ul>
<li><p>获取Class对象的方式：</p>
<ol>
<li>Class.forName(“全类名”)：将字节码文件架加载进内存，返回Class对象<ul>
<li>多用于配置文件，将类名定义在配置文件中，读取文件，加载类</li>
</ul>
</li>
<li>类名.class():通过类名的属性class获取<ul>
<li>多用于参数的传递</li>
</ul>
</li>
<li>对象.getClass() ：getClass()方法在Object中定义的<ul>
<li>多用于对象获取字节码的方式</li>
</ul>
</li>
</ol>
<ul>
<li>结论：<ul>
<li>同一个字节码文件(*.class)在一次程序运行的过程中只会加载一次。无论通过哪种方式获取的class对象都是同一个</li>
</ul>
</li>
</ul>
</li>
<li><p>class对象的功能：</p>
<ul>
<li>获取功能：<ol>
<li>获取成员变量们<ul>
<li>Field[ ]    getFields():获取所有public修饰的变量</li>
<li>Field    getField​(String name) 获取指定名称的public修饰的成员变量</li>
<li>Field[]    getDeclaredFields() 获取所有成员比那辆，不考虑修饰符</li>
<li>Field    getDeclaredField​(String name)获取指定名称的成员变量，不考虑修饰符</li>
</ul>
</li>
<li>获取构造方法们<ul>
<li>Constructor&lt;?&gt;[ ] getConstructors()</li>
<li>Constructor<T> getConstructor(类&lt;?&gt;…parameterTypes)</li>
<li>Constructor<T> getDeclaredConstructor(*&lt;?&gt;… parameterTypes)</li>
<li>Constructor&lt;?&gt;tDeclaredConstructorso</li>
</ul>
</li>
<li>获取成员方法们<ul>
<li>Method[] getMethods()</li>
<li>Method getMethod (String name, 类&lt;?&gt;… parameterTypes)</li>
<li>Method[ getDeclaredMethods()        </li>
<li>Method getDeclaredMethod ( String name, 类&lt;?&gt;… parameterTypes</li>
</ul>
</li>
<li>获取类名<ul>
<li>String getName()</li>
</ul>
</li>
</ol>
</li>
<li>Field：成员变量<ul>
<li>操作：<ol>
<li>设置值<ul>
<li>set(Object obj, Object value)</li>
</ul>
</li>
<li>获取值<ul>
<li>get(Object obj)</li>
</ul>
</li>
<li>忽略访问权限修饰符的安全检查<ul>
<li>setAccessible(true);  //暴力反射</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
<li>Constructor:构造方法<ul>
<li>创建对象的：<ul>
<li>T newInstance​(Object… initargs)</li>
<li>如果使用空参构造方法创建对象，操作可以简化：<ul>
<li>Class对象的T newInstance(）<strong>注</strong>：此方法在JDK11中已过时</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Method：方法对象<ul>
<li>执行方法：<ul>
<li>Object invoke(Object obj, Object… args)</li>
<li>获取方法名称：<ul>
<li>String getName：获取方法名</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<pre><code>*  案例
   * 需求：写一个“框架”，在不能改变该类的任何代码的前提下，可以拿给我们去创建热议类的对象，并且执行其中的方法
       * 实现
           1. 配置文件
           2. 反射
        * 步骤
            1. 将需要创建的对象的全类名和需要执行的方法定义在配文件
            2. 在程序中加载读取配置文件
            3. 使用反射技术来加载类文件进内存
            4. 创建对象
            5. 执行方法</code></pre><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><ul>
<li>概念：说明程序的。给计算机看的</li>
<li>注释：用文字描述程序的。给程序员看的</li>
<li>定义:注解( Annotation),也叫元数据。一种代码级别的说明。它是]K1.5及以后版本引入的一个特性,与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面,用来对这些元素进行说明,注释。</li>
<li>概念描述：<ol>
<li>JDK1.5之后新特性</li>
<li>说明程序的</li>
<li>使用注解：@注解名称</li>
</ol>
</li>
<li>作用分类:<ol>
<li>编写文档:通过代码里标识的元数据生成文档【生成文档doc文档】</li>
<li>代码分析:通过代码里标识的元数据对代码进行分析【使用反射】</li>
<li>编译检查:通过代码里标识的元数据让编译器能够实现基本的编译检查【 Override】</li>
</ol>
</li>
</ul>
<ul>
<li><p>JDK中预定义的一些注解</p>
<ul>
<li>@Overrride：检测被该注解标注的方法是否是继承自父类（接口）</li>
<li>@Deprecated：该注解标注的内容已过时，不推荐使用</li>
<li>@SuppressWarnings：压制警告<ul>
<li>一般传递参数“all”  @SuppressWarnings(“all”)</li>
</ul>
</li>
</ul>
</li>
<li><p>自定义注解</p>
<ul>
<li><p>格式：<br>  元注解：</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public @interface 注解名称&#123;</span><br><span class="line">        属性列表;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>本质：注解本质上就是一个接口，该接口默认继承Annotation接口</p>
<ul>
<li>public interface cn.wines.annotation.MyAnno extends java.lang.annotation.Annotation {}</li>
</ul>
</li>
<li><p>属性：接口中的抽象方法</p>
<ul>
<li>要求：<ol>
<li>属性的返回值类型<ul>
<li>基本数据类型</li>
<li>String</li>
<li>枚举</li>
<li>注解</li>
<li>以上类型的 </li>
</ul>
</li>
<li>定义了属性，使用时需要给属性赋值<ol>
<li>如果定义属性时使用<strong>default</strong>关键字，给属性初始化默认值，则使用注解时可以不进行属性赋值</li>
<li>如果只有一个属性需要赋值，并且属性的名称是value，则value可以省略，直接定义值即可</li>
<li>数组赋值时，值使用{}包裹，如果数组只有一个值，则{}可以省略<ul>
<li>元注解：用于描述注解的注解</li>
<li>@Target：描述注解能够作用的位置</li>
<li>ElementType取值：</li>
<li>TYPE：可以作用子类上</li>
<li>METHOD：可以作用于方法上</li>
<li>FIELD：可以作用于成员变量</li>
<li>@Retention：描述注解能够保留的阶段</li>
<li>RetentionPolicy取值：</li>
<li>RUNTIME：保留到class字节码文件中，被JVM读取到</li>
<li>SOURCE：注解只保留在源文件，当Java文件编译成class文件的时候，注解被遗弃</li>
<li>CLASS：注解被保留到class文件，但jvm加载class文件时候被遗弃，这是默认的生命周期；</li>
<li>@Documented：描述注解能够被抽取的api文档中</li>
<li>@Inherited：描述注解能否被子类继承</li>
</ul>
</li>
</ol>
</li>
</ol>
</li>
</ul>
</li>
</ul>
</li>
<li><p>在程序中使用（解析）注解：获取注解中定义的属性值</p>
<ol>
<li><p>获取注解定义的位置的对象 （Class, Method, Field）</p>
</li>
<li><p>获取指定的注解</p>
<pre><code class="getAnnotation(Class)">public class ProImpl implements Pro{
    public String className{
        return &quot;cn.wines.annotation. Demo1&quot;;
     }

    public String methodName{
        return &quot;show&quot;;
    }
 }</code></pre>
</li>
<li><p>调用注解中抽象方法获取配置的属性值</p>
</li>
</ol>
</li>
<li><p>小结：</p>
<ol>
<li>以后大多数是时候，我们会使用注解，而不是自定义注解</li>
<li>注解给谁用？<ol>
<li>编译器</li>
<li>给解析程序用</li>
</ol>
</li>
<li>注解不是程序的一部分，可以理解为注解就是一个标签</li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>Java笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Junit</tag>
        <tag>注解</tag>
        <tag>反射</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下数据库默认编码的问题</title>
    <url>/2020/03/30/Windows%E4%B8%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E9%BB%98%E8%AE%A4%E7%BC%96%E7%A0%81%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><h3 id="hwindowsmysql" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">Windows上直接安装MySQL</span></h3>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">根据你安装MySQL 的位置，一般默认安装在C盘。</span></li>
</ul>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">下面就以默认安装位置为例。</p>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">进入</p>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs css" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">C</span>:\<span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">ProgramData</span>\<span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">MySQL</span>\<span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">MySQL</span>&nbsp;<span class="hljs-selector-tag" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">Server</span>&nbsp;5<span class="hljs-selector-class" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(173, 229, 252); word-wrap: inherit !important; word-break: inherit !important;">.7</span><br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">找到文件my.ini这个配置文件，然后用记事本打开</p>
<ol style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: decimal;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">把默认的编码方式修改为<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">default-character-set=utf8</code><br><figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/30/xq7fDkOR6WKBphl.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">image.png</figcaption></figure></li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">其中<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">character-set-server=latin1</code>表示服务器的编码配置，需要统一改成utf8      <br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">character-set-server=utf8</code><br><figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/30/VZ8renPxpACUjoh.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">image.png</figcaption></figure></li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">因为修改了配置，所以需要重新启动mysql服务。(重启之后的数据库都没有了)<br>可以进入服务界面，手动的重新启动。<figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/30/H4KsDSoGrNaA5MT.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">image.png</figcaption></figure></li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">进入dos界面，登录数据库，输入命令：<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">show variables like "%char%"</code>；如果dos界面出现的下图所示结果，说明你修改mysql编码成功啦！<figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/30/zHAcgLaxWObC5hU.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">image.png</figcaption></figure></li>
</ol>
<h3 id="hxamppcontrol" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">xampp-control</span></h3>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">如果你是通过xampp-control来启动MySQL的话，就按照以下步骤</span></li>
</ul>
<ol style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: decimal;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">打开软件，然后点击如下按钮<figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/30/8KA59gqYIfp2VTX.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">image.png</figcaption></figure><br>然后选择my.ini。系统会自动通过记事本打开<br>添加如下字段<br><figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/30/JZm739yp8PqOuxE.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">image.png</figcaption></figure><br>然后把图中两行前面的#号去掉保存即可<br><figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/30/BPtAqimd4Fo5W3v.png" alt="image.png" title="" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">image.png</figcaption></figure></li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">最后重启服务器即可</span></li>
</ol>
<h3 id="h" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">结语</span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">通常情况下到这一步应该就没有问题的，如果还是乱码的话可能还是系统编码格式没有设置正确或是服务器编码格式没设置，这里就不过多赘述了，如果还有问题就给我留言吧。</p>
<h3 id="h-1" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">其他</span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">这些字段的修改笔者仅仅是验证过可以解决问题，但是是否全部要添加这些字段笔者没有一一实验，有兴趣的可以自行测试</p></div>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>设置终端代理</title>
    <url>/2020/03/30/%E8%AE%BE%E7%BD%AE%E7%BB%88%E7%AB%AF%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><h3 id="h" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">设置全局代理</span></h3>
<blockquote style="line-height: inherit; display: block; padding: 15px 15px 15px 1rem; font-size: 0.9em; margin: 1em 0px; color: rgb(129, 145, 152); border-left: 6px solid rgb(220, 230, 240); background: rgb(242, 247, 251); overflow: auto; overflow-wrap: normal; word-break: normal;">
  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 0px;">不建议，因为这样在下载国内资源库时也会通过代理</p>
</blockquote>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs cs" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">git&nbsp;config&nbsp;--<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">global</span>&nbsp;http.proxy&nbsp;socks5:<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">//127.0.0.1:1080</span><br>git&nbsp;config&nbsp;--<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">global</span>&nbsp;https.proxy&nbsp;socks5:<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">//127.0.0.1:1080</span><br></code></pre>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">后面的端口号根据自己的代理自行修改，不过大多数都是1080</span></li>
</ul>
<h3 id="hgithub" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">Github代理</span></h3>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">一般来说，只对Github下载通过代理就可以了(推荐)</span></li>
</ul>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs nginx" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-attribute" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">git</span>&nbsp;config&nbsp;--global&nbsp;http.https://github.com.proxy&nbsp;socks5://<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 99, 99); word-wrap: inherit !important; word-break: inherit !important;">127.0.0.1:1080</span><br>git&nbsp;config&nbsp;--global&nbsp;https.https://github.com.proxy&nbsp;socks5://<span class="hljs-number" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(211, 99, 99); word-wrap: inherit !important; word-break: inherit !important;">127.0.0.1:1080</span><br></code></pre>
<h3 id="h-1" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">取消代理</span></h3>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs php" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">git&nbsp;config&nbsp;--<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">global</span>&nbsp;--<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">unset</span>&nbsp;http.proxy<br>git&nbsp;config&nbsp;--<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">global</span>&nbsp;--<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">unset</span>&nbsp;https.proxy<br></code></pre>
<h3 id="h-2" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">结语</span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">OK，到这里，你的代理已经设置好了，现在你可以告别原来下载的龟速了，快去使用体验一下飞一般的速度吧。</p></div>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>代理</tag>
        <tag>终端</tag>
      </tags>
  </entry>
  <entry>
    <title>美化你的Mac终端</title>
    <url>/2020/03/25/%E7%BE%8E%E5%8C%96%E4%BD%A0%E7%9A%84Mac%E7%BB%88%E7%AB%AF/</url>
    <content><![CDATA[<div class="output_wrapper" id="output_wrapper_id" style="font-size: 16px; color: rgb(62, 62, 62); line-height: 1.6; word-spacing: 0px; letter-spacing: 0px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif;"><h3 id="harcheyforosx" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">安装Archey for OS X</span></h3>
<h4 id="h" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">效果预览</span></h4>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">想要看安装后效果的直接在终端运行以下命令</span></li>
</ul>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs shell" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;sh&nbsp;-c&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">"<span class="hljs-variable" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(173, 229, 252); word-wrap: inherit !important; word-break: inherit !important;">$(curl&nbsp;-fsSL&nbsp;https://raw.githubusercontent.com/athlonreg/archey-osx/master/bin/archey-en)</span>"</span>&nbsp;</span><br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">英文版，效果图如下：<br></p><figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/25/orfhCPpS5QzADxy.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">英文版效果图</figcaption></figure>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs shell" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;sh&nbsp;-c&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">"<span class="hljs-variable" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(173, 229, 252); word-wrap: inherit !important; word-break: inherit !important;">$(curl&nbsp;-fsSL&nbsp;https://raw.githubusercontent.com/athlonreg/archey-osx/master/bin/archey)</span>"</span></span><br></code></pre>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;">中文版，效果图如下：<br></p><figure style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><img src="https://i.loli.net/2020/03/25/djsRfOTGKLr5Ppl.png" alt="image.png" title="image.png" style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; display: block; margin: 0px auto; max-width: 100%;"><figcaption style="line-height: inherit; margin: 0px; padding: 0px; margin-top: 10px; text-align: center; color: rgb(153, 153, 153); font-size: 0.7em;">中文版效果图</figcaption></figure>
<h4 id="h-1" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">安装</span></h4>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs shell" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">cd</span>&nbsp;&amp;&amp;&nbsp;git&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">clone</span>&nbsp;https://github.com/athlonreg/archey-osx&nbsp;</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;sudo&nbsp;mv&nbsp;archey-osx/&nbsp;/usr/<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">local</span>/&nbsp;</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;sudo&nbsp;ln&nbsp;-s&nbsp;/usr/<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">local</span>/archey-osx/bin/archey&nbsp;/usr/<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">local</span>/bin/archey&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">#中文版</span></span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;sudo&nbsp;ln&nbsp;-s&nbsp;/usr/<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">local</span>/archey-osx/bin/archey-en&nbsp;/usr/<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">local</span>/bin/archey-en&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">#英文版</span></span><br></code></pre>
<blockquote style="line-height: inherit; display: block; padding: 15px 15px 15px 1rem; font-size: 0.9em; margin: 1em 0px; color: rgb(129, 145, 152); border-left: 6px solid rgb(220, 230, 240); background: rgb(242, 247, 251); overflow: auto; overflow-wrap: normal; word-break: normal;">
  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 0px;">设置打开终端自启动</p>
</blockquote>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs shell" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">echo</span>&nbsp;archey&nbsp;&gt;&gt;&nbsp;~/.bashrc&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">#中文版</span></span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">echo</span>&nbsp;archey-en&nbsp;&gt;&gt;&nbsp;~/.bashrc&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">#英文版</span></span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">echo</span>&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">"[[&nbsp;-s&nbsp;~/.bashrc&nbsp;]]&nbsp;&amp;&amp;&nbsp;source&nbsp;~/.bashrc"</span>&nbsp;&gt;&gt;&nbsp;~/.bash_profile&nbsp;</span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">source</span>&nbsp;~/.bashrc&nbsp;&amp;&amp;&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">source</span>&nbsp;~/.bash_profile</span><br></code></pre>
<blockquote style="line-height: inherit; display: block; padding: 15px 15px 15px 1rem; font-size: 0.9em; margin: 1em 0px; color: rgb(129, 145, 152); border-left: 6px solid rgb(220, 230, 240); background: rgb(242, 247, 251); overflow: auto; overflow-wrap: normal; word-break: normal;">
  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 0px;">oh-my-zsh用户</p>
</blockquote>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs shell" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">echo</span>&nbsp;archey&nbsp;&gt;&gt;&nbsp;~/.zshrc&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">#中文版</span></span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">echo</span>&nbsp;archey-en&nbsp;&gt;&gt;&nbsp;~/.zshrc&nbsp;<span class="hljs-comment" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(136, 136, 136); word-wrap: inherit !important; word-break: inherit !important;">#英文版</span></span><br><span class="hljs-meta" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 155, 155); word-wrap: inherit !important; word-break: inherit !important;">$</span><span class="bash" style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; word-wrap: inherit !important; word-break: inherit !important;">&nbsp;<span class="hljs-built_in" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">source</span>&nbsp;~/.zshrc</span><br></code></pre>
<h4 id="h-2" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">更新</span></h4>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">$ cd /usr/local/archey-osx/ &amp;&amp; git pull &amp;&amp; cd</code></p>
<h4 id="h-3" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">小结</span></h4>
<blockquote style="line-height: inherit; display: block; padding: 15px 15px 15px 1rem; font-size: 0.9em; margin: 1em 0px; color: rgb(129, 145, 152); border-left: 6px solid rgb(220, 230, 240); background: rgb(242, 247, 251); overflow: auto; overflow-wrap: normal; word-break: normal;">
  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 0px;">安装到这里基本就结束了，但避免安装错误出现各种乱七八糟的状况（比如我，第一次安装后打开会出现几次）。还有就是有些人可能不想要了，下面 简单介绍下卸载方法</p>
</blockquote>
<h3 id="h-4" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">卸载</span></h3>
<h4 id="h-5" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">手动操作</span></h4>
<blockquote style="line-height: inherit; display: block; padding: 15px 15px 15px 1rem; font-size: 0.9em; margin: 1em 0px; color: rgb(129, 145, 152); border-left: 6px solid rgb(220, 230, 240); background: rgb(242, 247, 251); overflow: auto; overflow-wrap: normal; word-break: normal;">
  <p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 0px;">小白不建议使用</p>
</blockquote>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;">使用nano命令，依次打开<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">~/.bashrc</code> 和 <code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">~/.bash_profile</code>两个文件，把其中所有 <code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">archey</code>、<code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">archey-en</code> 和 <code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(233, 105, 0); background: rgb(248, 248, 248);">[[ -s ~/.bashrc ]] &amp;amp;&amp;amp; source ~/.bashrc</code>的行都删除。</li>
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">编辑命令：</span></li>
</ul>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs nginx" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;"><span class="hljs-attribute" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(255, 255, 170); word-wrap: inherit !important; word-break: inherit !important;">nano</span>&nbsp;~/.bashrc<br>nano&nbsp;~/.bash_profile<br></code></pre>
<h4 id="h-6" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.2em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">脚本操作</span></h4>
<pre style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;"><code class="hljs lua" style="overflow-wrap: break-word; margin: 0px 2px; line-height: 18px; font-size: 14px; font-weight: normal; word-spacing: 0px; letter-spacing: 0px; font-family: Consolas, Inconsolata, Courier, monospace; border-radius: 0px; overflow-x: auto; padding: 0.5em; background: rgb(51, 51, 51); color: white; white-space: pre !important; word-wrap: normal !important; word-break: normal !important; overflow: auto !important; display: -webkit-box !important;">sudo&nbsp;rm&nbsp;-fr&nbsp;/usr/<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">local</span>/bin/archey&nbsp;/usr/<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">local</span>/bin/archey-en&nbsp;/usr/<span class="hljs-keyword" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(252, 194, 140); word-wrap: inherit !important; word-break: inherit !important;">local</span>/archey-osx<br>cd&nbsp;$HOME<br><span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">[[&nbsp;-s&nbsp;.zshrc&nbsp;]]</span>&nbsp;&amp;&amp;&nbsp;sed&nbsp;-i&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">".bak"</span>&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">'/archey/d'</span>&nbsp;.zshrc<br><span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">[[&nbsp;-s&nbsp;.bashrc&nbsp;]]</span>&nbsp;&amp;&amp;&nbsp;sed&nbsp;-i&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">".bak"</span>&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">'/archey/d'</span>&nbsp;.bashrc<br><span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">[[&nbsp;-s&nbsp;.bash_profile&nbsp;]]</span>&nbsp;&amp;&amp;&nbsp;sed&nbsp;-i&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">".bak"</span>&nbsp;<span class="hljs-string" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; color: rgb(162, 252, 162); word-wrap: inherit !important; word-break: inherit !important;">'/[[&nbsp;-s&nbsp;~\/.bashrc&nbsp;]]&nbsp;&amp;&amp;&nbsp;source&nbsp;~\/.bashrc/d'</span>&nbsp;.bash_profile<br></code></pre>
<h3 id="h-7" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">总结</span></h3>
<ul style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; padding-left: 32px; list-style-type: disc;">
<li style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px; margin-bottom: 0.5em;"><span style="font-size: inherit; color: inherit; line-height: inherit; margin: 0px; padding: 0px;">好了，安装操作和卸载操作就到此为止了，如果安装出现问题就卸载然后在多安装几次就行了</span></li>
</ul>
<h3 id="h-8" style="color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px; font-weight: bold; font-size: 1.3em; border-bottom: 2px solid rgb(0, 172, 193);"><span style="font-size: inherit; line-height: inherit; margin: 0px; display: inline-block; font-weight: normal; background: rgb(0, 172, 193); color: rgb(255, 255, 255); padding: 3px 10px 0px; border-top-right-radius: 3px; border-top-left-radius: 4px; margin-right: 2px;">参考文章链接</span></h3>
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.5em 0px;"><a href="https://www.zhihu.com/question/313193372?sort=created" target="_blank" rel="noopener" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; text-decoration: none; color: rgb(30, 107, 184); overflow-wrap: break-word;">知乎作者</a><br><a href="https://sspai.com/post/59297" target="_blank" rel="noopener" style="font-size: inherit; line-height: inherit; margin: 0px; padding: 0px; text-decoration: none; color: rgb(30, 107, 184); overflow-wrap: break-word;">少数派文章</a></p></div>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>终端</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac电脑上Python3的关联</title>
    <url>/2019/04/21/Mac%E7%94%B5%E8%84%91%E4%B8%8APython3%E7%9A%84%E5%85%B3%E8%81%94/</url>
    <content><![CDATA[<div class="output_wrapper" id="output_wrapper_id" style="font-size: 15px; color: rgb(62, 62, 62); line-height: 1.8; word-spacing: 2px; letter-spacing: 2px; font-family: 'Helvetica Neue', Helvetica, 'Hiragino Sans GB', 'Microsoft YaHei', Arial, sans-serif; background-image: linear-gradient(90deg, rgba(50, 0, 0, 0.05) 3%, rgba(0, 0, 0, 0) 3%), linear-gradient(360deg, rgba(50, 0, 0, 0.05) 3%, rgba(0, 0, 0, 0) 3%); background-size: 20px 20px; background-position: center center;"><p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">查找Python和Python3的位置<br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); background: rgb(248, 248, 248);">which python</code><br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); background: rgb(248, 248, 248);">which python3</code><br>取消原有链接<br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); background: rgb(248, 248, 248);">unlink /usr/local/bin/python</code><br>注意：这里的位置是你自己电脑上安装Python的位置，一般默认就是这个<br>把链接改为Python3<br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); background: rgb(248, 248, 248);">ln -s /usr/local/bin/python3 /usr/local/bin/python</code></p>
<hr style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; height: 1px; margin: 1.5rem 0px; border-right: none; border-bottom: none; border-left: none; border-image: initial; border-top: 1px dashed rgb(165, 165, 165);">
<p style="font-size: inherit; color: inherit; line-height: inherit; padding: 0px; margin: 1.7em 0px;">同理，查找pip和pip3的位置<br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); background: rgb(248, 248, 248);">which pip</code><br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); background: rgb(248, 248, 248);">which pip3</code><br>更改连接地址<br><code style="font-size: inherit; line-height: inherit; overflow-wrap: break-word; padding: 2px 4px; border-radius: 4px; margin: 0px 2px; color: rgb(248, 35, 117); background: rgb(248, 248, 248);">ln -s /usr/local/bin/pip3 /usr/local/bin/pip</code><br>OK，到这里就大功告成了</p></div>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Python</tag>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
